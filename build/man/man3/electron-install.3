.TH "electron-install" 3 "Thu Jan 17 2019" "CppLogging" \" -*- nroff -*-
.ad l
.nh
.SH NAME
electron-install \- Electron install 
Guide how to use electron install\&.
.PP
.SS "参考文档"
.PP
.RS 4
.PP
.IP "1." 4
\fCElectron安装文档\fP
.IP "2." 4
\fCElectron-Ubuntu构建步骤\fP
.IP "3." 4
\fCElectron桌面应用：环境搭建\fP
.IP "4." 4
\fC在Ubuntu上安装最新稳定版本的node及npm\fP
.PP
.PP
.RE
.PP
.PP
.SS "开发环境介绍"
.PP
.RS 4
.PP
.IP "\(bu" 2
主机操作系统：deepin 64-bit
.IP "\(bu" 2
Python版本：Python3
.PP
.PP
.RE
.PP
.PP
.SS "Electron简介"
.PP
.RS 4
.PP
Electron是由Github开发，基于Chromium和Node\&.js，使用JavaScript、HTML和CSS等Web技术创建跨平台原生桌面应用的框架。兼容Mac、Window和Linux，它构建的应用可在这三个操作系统上面运行，借助Electron，我们可以使用纯JavaScript来调用丰富的原生APIs。
.PP
.RE
.PP
.PP
.SS "安装系统依赖库"
.PP
.PP
.nf
sudo apt-get install build-essential clang libdbus-1-dev libgtk-3-dev \
                       libnotify-dev libgnome-keyring-dev libgconf2-dev \
                       libasound2-dev libcap-dev libcups2-dev libxtst-dev \
                       libxss1 libnss3-dev gcc-multilib g++-multilib curl \
                       gperf bison python-dbusmock
.fi
.PP
.PP
.PP
.PP
.SS "Electron安装"
.PP
.SS "安装node&npm"
.PP
.PP
.nf
firebird@tools:~$ sudo apt install nodejs-legacy
正在读取软件包列表\&.\&.\&. 完成
正在分析软件包的依赖关系树       
正在读取状态信息\&.\&.\&. 完成       
有一些软件包无法被安装。如果您用的是 unstable 发行版，这也许是
因为系统无法达到您要求的状态造成的。该版本中可能会有一些您需要的软件
包尚未被创建或是它们已被从新到(Incoming)目录移出。
下列信息可能会对解决问题有所帮助：

下列软件包有未满足的依赖关系：
 nodejs-legacy : 依赖: nodejs (>= 0\&.6\&.19~dfsg1-3~) 但是它将不会被安装
E: 无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系。
.fi
.PP
.PP
deepin是基于debian的。参考\fCnodejs官网\fP，找到安装说明。
.PP
Node\&.js v11\&.x:
.PP
.PP
.nf
# Using Ubuntu
curl -sL https://deb\&.nodesource\&.com/setup_11\&.x | sudo -E bash -
sudo apt-get install -y nodejs

# Using Debian, as root
curl -sL https://deb\&.nodesource\&.com/setup_11\&.x | bash -
apt-get install -y nodejs
.fi
.PP
.PP
安装nodejs、npm、electron：
.PP
.PP
.nf
sudo apt-get install -y nodejs
sudo apt-get install -y npm
npm --version
node --version
npm init
sudo npm install -g cnpm --registry=https://registry\&.npm\&.taobao\&.org
sudo cnpm  install -g electron
.fi
.PP
.PP
一般执行了
.PP
.nf
sudo cnpm  install -g electron

.fi
.PP
，就无需再执行
.PP
.nf
npm install

.fi
.PP
。
.PP
运行打包：
.PP
.PP
.nf
# npm install
cnpm install
npm start

# npm install --save-dev electron-packager
sudo npm install electron-packager -g
electron-packager \&. eet --out \&.\&./eet
.fi
.PP
.PP
\fCElectron API 演示应用程序\fP
.PP
.PP
.nf
# 克隆示例项目的仓库
git clone https://github\&.com/electron/electron-quick-start

# 进入这个仓库
cd electron-quick-start

# 安装依赖并运行
cnpm install && npm start

# git clone https://github\&.com/electron/electron-api-demos
# git clone https://github\&.com/demopark/electron-api-demos-Zh_CN
.fi
.PP
.PP
.PP
 
