<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1SyncProcessor" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::SyncProcessor</compoundname>
    <basecompoundref refid="classCppLogging_1_1Processor" prot="public" virt="non-virtual">CppLogging::Processor</basecompoundref>
    <includes refid="sync__processor_8h" local="no">sync_processor.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCppLogging_1_1SyncProcessor_1a5278c4e7c4784ede439f7864d82abcac" prot="private" static="no" mutable="no">
        <type>CppCommon::CriticalSection</type>
        <definition>CppCommon::CriticalSection CppLogging::SyncProcessor::_lock</definition>
        <argsstring></argsstring>
        <name>_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="42" column="1" bodyfile="include/logging/processors/sync_processor.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1a986d3bea55cccc010878264050ee51cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::SyncProcessor::SyncProcessor</definition>
        <argsstring>()=default</argsstring>
        <name>SyncProcessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1a85d47bca89b0d9cc298e8a2b8c8a86fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::SyncProcessor::SyncProcessor</definition>
        <argsstring>(const SyncProcessor &amp;)=delete</argsstring>
        <name>SyncProcessor</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1SyncProcessor" kindref="compound">SyncProcessor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1ace46e7ebf1b6098e49a77e7db950d676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::SyncProcessor::SyncProcessor</definition>
        <argsstring>(SyncProcessor &amp;&amp;) noexcept=default</argsstring>
        <name>SyncProcessor</name>
        <param>
          <type><ref refid="classCppLogging_1_1SyncProcessor" kindref="compound">SyncProcessor</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1ac68d2120077bd70099813252200d10ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CppLogging::SyncProcessor::~SyncProcessor</definition>
        <argsstring>()=default</argsstring>
        <name>~SyncProcessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1a3d49766b01d68bf62504ec4ebfdfc712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1SyncProcessor" kindref="compound">SyncProcessor</ref> &amp;</type>
        <definition>SyncProcessor&amp; CppLogging::SyncProcessor::operator=</definition>
        <argsstring>(const SyncProcessor &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1SyncProcessor" kindref="compound">SyncProcessor</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1a6062321b1463dac816c853d63e87ce04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1SyncProcessor" kindref="compound">SyncProcessor</ref> &amp;</type>
        <definition>SyncProcessor&amp; CppLogging::SyncProcessor::operator=</definition>
        <argsstring>(SyncProcessor &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1SyncProcessor" kindref="compound">SyncProcessor</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1a2e953a43ccd47756d430507bf46022ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CppLogging::SyncProcessor::ProcessRecord</definition>
        <argsstring>(Record &amp;record) override</argsstring>
        <name>ProcessRecord</name>
        <reimplements refid="classCppLogging_1_1Processor_1a59da9c9fa2d4087b2273096651bc30cd">ProcessRecord</reimplements>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para>Process the given logging record through all child filters, layouts and appenders. </para>
        </briefdescription>
        <detaileddescription>
<para>Default behavior of the method will take the given logging record and process it in the following sequence:<itemizedlist>
<listitem><para>all filters (if any present)</para>
</listitem><listitem><para>all layouts (if any present)</para>
</listitem><listitem><para>all appenders (if any present)</para>
</listitem><listitem><para>all sub processors (if any present)</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>record</parametername>
</parameternamelist>
<parameterdescription>
<para>- Logging record </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&apos;true&apos; if the logging record was successfully processed, &apos;false&apos; if the logging record was filtered out </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyncProcessor_1a1f2679ef17e459163cf1546b4acfae8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CppLogging::SyncProcessor::Flush</definition>
        <argsstring>() override</argsstring>
        <name>Flush</name>
        <reimplements refid="classCppLogging_1_1Processor_1a60a2737b93a6ea1d60e868392377a976">Flush</reimplements>
        <briefdescription>
<para>Flush the current logging processor. </para>
        </briefdescription>
        <detaileddescription>
<para>Default behavior of the method will flush in the following sequence:<itemizedlist>
<listitem><para>all appenders (if any present)</para>
</listitem><listitem><para>all sub processors (if any present) </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/processors/sync_processor.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Synchronous logging processor. </para>
    </briefdescription>
    <detaileddescription>
<para>Synchronous logging processor process the given logging record under the critical section to avoid races in not thread-safe layouts, filters and appenders.</para>
<para>Thread-safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="94">
        <label>CppLogging::Processor</label>
        <link refid="classCppLogging_1_1Processor"/>
      </node>
      <node id="93">
        <label>CppLogging::SyncProcessor</label>
        <link refid="classCppLogging_1_1SyncProcessor"/>
        <childnode refid="94" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="96">
        <label>CppLogging::Processor</label>
        <link refid="classCppLogging_1_1Processor"/>
      </node>
      <node id="95">
        <label>CppLogging::SyncProcessor</label>
        <link refid="classCppLogging_1_1SyncProcessor"/>
        <childnode refid="96" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/logging/processors/sync_processor.h" line="27" column="1" bodyfile="include/logging/processors/sync_processor.h" bodystart="26" bodyend="43"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1SyncProcessor_1a5278c4e7c4784ede439f7864d82abcac" prot="private" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>_lock</name></member>
      <member refid="classCppLogging_1_1Processor_1af4d1515ec036a036b3c21377a9c5c91c" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>appenders</name></member>
      <member refid="classCppLogging_1_1Processor_1ae7f724429d96b5a76d0bf9d521eda162" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>filters</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1a1f2679ef17e459163cf1546b4acfae8a" prot="public" virt="virtual"><scope>CppLogging::SyncProcessor</scope><name>Flush</name></member>
      <member refid="classCppLogging_1_1Processor_1ad4fb13124a6a17750549cf263c1f40b1" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>layouts</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1a3d49766b01d68bf62504ec4ebfdfc712" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1a6062321b1463dac816c853d63e87ce04" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1Processor_1af0fb712251609787a41aecb4717d64a1" prot="public" virt="non-virtual" ambiguityscope="CppLogging::Processor::"><scope>CppLogging::SyncProcessor</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1Processor_1a91a5f1520149d34a37bfc91de66830f7" prot="public" virt="non-virtual" ambiguityscope="CppLogging::Processor::"><scope>CppLogging::SyncProcessor</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1Processor_1ab9e8bf067a254854f6f5bb8a108c1105" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>Processor</name></member>
      <member refid="classCppLogging_1_1Processor_1a18d2e051692b2ef3096ae5cca6a3ee58" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>Processor</name></member>
      <member refid="classCppLogging_1_1Processor_1af909c31ebb473cad9623ca3b84f8cc91" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>Processor</name></member>
      <member refid="classCppLogging_1_1Processor_1ab4d96b6012bee770a07a3f8a25a836a3" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>processors</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1a2e953a43ccd47756d430507bf46022ce" prot="public" virt="virtual"><scope>CppLogging::SyncProcessor</scope><name>ProcessRecord</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1a986d3bea55cccc010878264050ee51cd" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>SyncProcessor</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1a85d47bca89b0d9cc298e8a2b8c8a86fc" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>SyncProcessor</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1ace46e7ebf1b6098e49a77e7db950d676" prot="public" virt="non-virtual"><scope>CppLogging::SyncProcessor</scope><name>SyncProcessor</name></member>
      <member refid="classCppLogging_1_1Processor_1aa232011a6bc4ba37d8acc56158ea43a7" prot="public" virt="virtual"><scope>CppLogging::SyncProcessor</scope><name>~Processor</name></member>
      <member refid="classCppLogging_1_1SyncProcessor_1ac68d2120077bd70099813252200d10ec" prot="public" virt="virtual"><scope>CppLogging::SyncProcessor</scope><name>~SyncProcessor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
