<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="electron-install" kind="page">
    <compoundname>electron-install</compoundname>
    <title>Electron install</title>
    <briefdescription>
<para>Guide how to use electron install. </para>
    </briefdescription>
    <detaileddescription>
<para>Guide how to use electron install.</para>
<para><heading level="2">参考文档</heading>
</para>
<para><blockquote><para></para>
<para><orderedlist>
<listitem><para><ulink url="https://electronjs.org/docs/tutorial/installation">Electron安装文档</ulink></para>
</listitem><listitem><para><ulink url="https://electronjs.org/docs/development/build-instructions-linux">Electron-Ubuntu构建步骤</ulink></para>
</listitem><listitem><para><ulink url="https://blog.csdn.net/qq_14834431/article/details/79512526">Electron桌面应用：环境搭建</ulink></para>
</listitem><listitem><para><ulink url="https://segmentfault.com/a/1190000007542620">在Ubuntu上安装最新稳定版本的node及npm</ulink></para>
</listitem></orderedlist>
</para>
<para></para>
</blockquote></para>
<para><heading level="2">开发环境介绍</heading>
</para>
<para><blockquote><para></para>
<para><itemizedlist>
<listitem><para>主机操作系统：deepin 64-bit</para>
</listitem><listitem><para>Python版本：Python3</para>
</listitem></itemizedlist>
</para>
<para></para>
</blockquote></para>
<para><heading level="2">Electron简介</heading>
</para>
<para><blockquote><para></para>
<para>Electron是由Github开发，基于Chromium和Node.js，使用JavaScript、HTML和CSS等Web技术创建跨平台原生桌面应用的框架。兼容Mac、Window和Linux，它构建的应用可在这三个操作系统上面运行，借助Electron，我们可以使用纯JavaScript来调用丰富的原生APIs。</para>
<para></para>
</blockquote></para>
<para><heading level="2">安装系统依赖库</heading>
</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>build-essential<sp/>clang<sp/>libdbus-1-dev<sp/>libgtk-3-dev<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libnotify-dev<sp/>libgnome-keyring-dev<sp/>libgconf2-dev<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libasound2-dev<sp/>libcap-dev<sp/>libcups2-dev<sp/>libxtst-dev<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libxss1<sp/>libnss3-dev<sp/>gcc-multilib<sp/>g++-multilib<sp/>curl<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gperf<sp/>bison<sp/>python-dbusmock</highlight></codeline>
</programlisting></para>
<para><hruler/>
</para>
<para><heading level="2">Electron安装</heading>
</para>
<para><heading level="3">安装node&amp;npm</heading>
</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">firebird@tools:~$<sp/>sudo<sp/>apt<sp/>install<sp/>nodejs-legacy</highlight></codeline>
<codeline><highlight class="normal">正在读取软件包列表...<sp/>完成</highlight></codeline>
<codeline><highlight class="normal">正在分析软件包的依赖关系树<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">正在读取状态信息...<sp/>完成<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">有一些软件包无法被安装。如果您用的是<sp/>unstable<sp/>发行版，这也许是</highlight></codeline>
<codeline><highlight class="normal">因为系统无法达到您要求的状态造成的。该版本中可能会有一些您需要的软件</highlight></codeline>
<codeline><highlight class="normal">包尚未被创建或是它们已被从新到(Incoming)目录移出。</highlight></codeline>
<codeline><highlight class="normal">下列信息可能会对解决问题有所帮助：</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">下列软件包有未满足的依赖关系：</highlight></codeline>
<codeline><highlight class="normal"><sp/>nodejs-legacy<sp/>:<sp/>依赖:<sp/>nodejs<sp/>(&gt;=<sp/>0.6.19~dfsg1-3~)<sp/>但是它将不会被安装</highlight></codeline>
<codeline><highlight class="normal">E:<sp/>无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系。</highlight></codeline>
</programlisting></para>
<para>deepin是基于debian的。参考<ulink url="https://nodejs.org/en/download/package-manager/">nodejs官网</ulink>，找到安装说明。</para>
<para>Node.js v11.x:</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">#<sp/>Using<sp/>Ubuntu</highlight></codeline>
<codeline><highlight class="normal">curl<sp/>-sL<sp/>https://deb.nodesource.com/setup_11.x<sp/>|<sp/>sudo<sp/>-E<sp/>bash<sp/>-</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>-y<sp/>nodejs</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Using<sp/>Debian,<sp/>as<sp/>root</highlight></codeline>
<codeline><highlight class="normal">curl<sp/>-sL<sp/>https://deb.nodesource.com/setup_11.x<sp/>|<sp/>bash<sp/>-</highlight></codeline>
<codeline><highlight class="normal">apt-get<sp/>install<sp/>-y<sp/>nodejs</highlight></codeline>
</programlisting></para>
<para>安装nodejs、npm、electron：</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>-y<sp/>nodejs</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>-y<sp/>npm</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>--version</highlight></codeline>
<codeline><highlight class="normal">node<sp/>--version</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>init</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>npm<sp/>install<sp/>-g<sp/>cnpm<sp/>--registry=https://registry.npm.taobao.org</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>cnpm<sp/><sp/>install<sp/>-g<sp/>electron</highlight></codeline>
</programlisting></para>
<para>一般执行了<programlisting filename=".bash"><codeline><highlight class="normal">sudo<sp/>cnpm<sp/><sp/>install<sp/>-g<sp/>electron</highlight></codeline>
</programlisting>，就无需再执行<programlisting filename=".bash"><codeline><highlight class="normal">npm<sp/>install</highlight></codeline>
</programlisting>。</para>
<para>运行打包：</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">#<sp/>npm<sp/>install</highlight></codeline>
<codeline><highlight class="normal">cnpm<sp/>install</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>start</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>npm<sp/>install<sp/>--save-dev<sp/>electron-packager</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>npm<sp/>install<sp/>electron-packager<sp/>-g</highlight></codeline>
<codeline><highlight class="normal">electron-packager<sp/>.<sp/>eet<sp/>--out<sp/>../eet</highlight></codeline>
</programlisting></para>
<para><ulink url="https://electronjs.org/#get-started">Electron API 演示应用程序</ulink></para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">#<sp/>克隆示例项目的仓库</highlight></codeline>
<codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/electron/electron-quick-start</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>进入这个仓库</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>electron-quick-start</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>安装依赖并运行</highlight></codeline>
<codeline><highlight class="normal">cnpm<sp/>install<sp/>&amp;&amp;<sp/>npm<sp/>start</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>git<sp/>clone<sp/>https://github.com/electron/electron-api-demos</highlight></codeline>
<codeline><highlight class="normal">#<sp/>git<sp/>clone<sp/>https://github.com/demopark/electron-api-demos-Zh_CN</highlight></codeline>
</programlisting></para>
<para><hruler/>
 </para>
    </detaileddescription>
  </compounddef>
</doxygen>
