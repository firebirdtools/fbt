<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1NullAppender" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::NullAppender</compoundname>
    <basecompoundref refid="classCppLogging_1_1Appender" prot="public" virt="non-virtual">CppLogging::Appender</basecompoundref>
    <includes refid="null__appender_8h" local="no">null_appender.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1NullAppender_1af2d9dedec941a77bbc593f9d33ee50de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::NullAppender::NullAppender</definition>
        <argsstring>()=default</argsstring>
        <name>NullAppender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/null_appender.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1NullAppender_1a5c81fcbc737e59f7cf57c7acb94d49b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::NullAppender::NullAppender</definition>
        <argsstring>(const NullAppender &amp;)=delete</argsstring>
        <name>NullAppender</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1NullAppender" kindref="compound">NullAppender</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/null_appender.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1NullAppender_1a23ad444508e6042db5bd8015aa12d719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::NullAppender::NullAppender</definition>
        <argsstring>(NullAppender &amp;&amp;) noexcept=default</argsstring>
        <name>NullAppender</name>
        <param>
          <type><ref refid="classCppLogging_1_1NullAppender" kindref="compound">NullAppender</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/null_appender.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1NullAppender_1afda8485c6dde9373fbc8627abdfea23d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CppLogging::NullAppender::~NullAppender</definition>
        <argsstring>()=default</argsstring>
        <name>~NullAppender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/null_appender.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1NullAppender_1a3e584286b52a0be598cc2d2edd8799f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1NullAppender" kindref="compound">NullAppender</ref> &amp;</type>
        <definition>NullAppender&amp; CppLogging::NullAppender::operator=</definition>
        <argsstring>(const NullAppender &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1NullAppender" kindref="compound">NullAppender</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/null_appender.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1NullAppender_1adc025288ce19370d4c57049572b617c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1NullAppender" kindref="compound">NullAppender</ref> &amp;</type>
        <definition>NullAppender&amp; CppLogging::NullAppender::operator=</definition>
        <argsstring>(NullAppender &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1NullAppender" kindref="compound">NullAppender</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/null_appender.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1NullAppender_1a478c75b951fdb94a9c213b8178547bfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CppLogging::NullAppender::AppendRecord</definition>
        <argsstring>(Record &amp;record) override</argsstring>
        <name>AppendRecord</name>
        <reimplements refid="classCppLogging_1_1Appender_1a770dfe9cd6d1f22a66582bed758a7b4e">AppendRecord</reimplements>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para>Append the given logging record. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>record</parametername>
</parameternamelist>
<parameterdescription>
<para>- Logging record </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/null_appender.h" line="34" column="1" bodyfile="include/logging/appenders/null_appender.h" bodystart="34" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Null appender. </para>
    </briefdescription>
    <detaileddescription>
<para>Null appender does nothing with a given logging record.</para>
<para>Thread-safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="75">
        <label>CppLogging::Appender</label>
        <link refid="classCppLogging_1_1Appender"/>
      </node>
      <node id="74">
        <label>CppLogging::NullAppender</label>
        <link refid="classCppLogging_1_1NullAppender"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="77">
        <label>CppLogging::Appender</label>
        <link refid="classCppLogging_1_1Appender"/>
      </node>
      <node id="76">
        <label>CppLogging::NullAppender</label>
        <link refid="classCppLogging_1_1NullAppender"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/logging/appenders/null_appender.h" line="23" column="1" bodyfile="include/logging/appenders/null_appender.h" bodystart="22" bodyend="35"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1NullAppender_1a478c75b951fdb94a9c213b8178547bfc" prot="public" virt="virtual"><scope>CppLogging::NullAppender</scope><name>AppendRecord</name></member>
      <member refid="classCppLogging_1_1Appender_1a6f6ebd942c5045e8b07d100fe5656ee6" prot="public" virt="virtual"><scope>CppLogging::NullAppender</scope><name>Flush</name></member>
      <member refid="classCppLogging_1_1NullAppender_1af2d9dedec941a77bbc593f9d33ee50de" prot="public" virt="non-virtual"><scope>CppLogging::NullAppender</scope><name>NullAppender</name></member>
      <member refid="classCppLogging_1_1NullAppender_1a5c81fcbc737e59f7cf57c7acb94d49b8" prot="public" virt="non-virtual"><scope>CppLogging::NullAppender</scope><name>NullAppender</name></member>
      <member refid="classCppLogging_1_1NullAppender_1a23ad444508e6042db5bd8015aa12d719" prot="public" virt="non-virtual"><scope>CppLogging::NullAppender</scope><name>NullAppender</name></member>
      <member refid="classCppLogging_1_1NullAppender_1a3e584286b52a0be598cc2d2edd8799f2" prot="public" virt="non-virtual"><scope>CppLogging::NullAppender</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1NullAppender_1adc025288ce19370d4c57049572b617c6" prot="public" virt="non-virtual"><scope>CppLogging::NullAppender</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1NullAppender_1afda8485c6dde9373fbc8627abdfea23d" prot="public" virt="virtual"><scope>CppLogging::NullAppender</scope><name>~NullAppender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
