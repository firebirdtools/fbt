<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1Record" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::Record</compoundname>
    <includes refid="record_8h" local="no">record.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classCppLogging_1_1Record_1acb824eebe901b423004a65d73dd1ce4d" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t CppLogging::Record::timestamp</definition>
        <argsstring></argsstring>
        <name>timestamp</name>
        <briefdescription>
<para>Timestamp of the logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="43" column="1" bodyfile="include/logging/record.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1Record_1a816e732d29b4dcd29a7f073b40b20738" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t CppLogging::Record::thread</definition>
        <argsstring></argsstring>
        <name>thread</name>
        <briefdescription>
<para>Thread Id of the logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="45" column="1" bodyfile="include/logging/record.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1Record_1a4f673dff61bc47ca855b489cdc8ac227" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceCppLogging_1ac4e889a814b82af010ef93be2e618f3b" kindref="member">Level</ref></type>
        <definition>Level CppLogging::Record::level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <briefdescription>
<para>Level of the logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="47" column="1" bodyfile="include/logging/record.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1Record_1a8791d7c6170eda83edc33e66a5d1a9eb" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CppLogging::Record::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
<para><ref refid="classCppLogging_1_1Logger" kindref="compound">Logger</ref> name of the logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="49" column="1" bodyfile="include/logging/record.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1Record_1a5633a400f28f8b80878eb0979e128668" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string CppLogging::Record::message</definition>
        <argsstring></argsstring>
        <name>message</name>
        <briefdescription>
<para>Message of the logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="51" column="1" bodyfile="include/logging/record.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1Record_1a9fbb553c4a7dde6690118c46a2b2d946" prot="public" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; CppLogging::Record::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
<para>Buffer of the logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="53" column="1" bodyfile="include/logging/record.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1Record_1a53fb6876e9bcb49289e0447ed79d6415" prot="public" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; CppLogging::Record::raw</definition>
        <argsstring></argsstring>
        <name>raw</name>
        <briefdescription>
<para><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> content after layout. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="56" column="1" bodyfile="include/logging/record.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1Record_1a9869b96b578bbb85709cdaec079526ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::Record::Record</definition>
        <argsstring>()</argsstring>
        <name>Record</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1aa27f6c8c7b1593d38ad4c28294df63c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::Record::Record</definition>
        <argsstring>(const Record &amp;)=default</argsstring>
        <name>Record</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1aafb916fa6c565ff7735e18d4e52e6f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::Record::Record</definition>
        <argsstring>(Record &amp;&amp;)=default</argsstring>
        <name>Record</name>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1a80115bd6070e1d840724b35621047256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::Record::~Record</definition>
        <argsstring>()=default</argsstring>
        <name>~Record</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1a7bba3b9432bea704f7012a52cdb22d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
        <definition>Record&amp; CppLogging::Record::operator=</definition>
        <argsstring>(const Record &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1abdc1b63b47208d14755fc566b07e6ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
        <definition>Record&amp; CppLogging::Record::operator=</definition>
        <argsstring>(Record &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1ace1496b48e6ca8950e1a6ffb254f408a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CppLogging::Record::Format</definition>
        <argsstring>(const char *pattern, const Args &amp;... args)</argsstring>
        <name>Format</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const Args &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Format message of the logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1a329f4aee55d7a67be3f313449b4bdf21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CppLogging::Record::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clear logging record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Record_1a05103353f6464abaed30526a45b6ad39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CppLogging::Record::swap</definition>
        <argsstring>(Record &amp;record) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para>Swap two instances. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classCppLogging_1_1Record_1a41307f7cef7933943d41aa2f13fcef01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void swap</definition>
        <argsstring>(Record &amp;record1, Record &amp;record2) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record1</declname>
        </param>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/record.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Logging record. </para>
    </briefdescription>
    <detaileddescription>
<para>Logging record encapsulates all required fields in a single instance:<itemizedlist>
<listitem><para>timestamp</para>
</listitem><listitem><para>thread Id</para>
</listitem><listitem><para>level</para>
</listitem><listitem><para>logger</para>
</listitem><listitem><para>message</para>
</listitem><listitem><para>buffer</para>
</listitem></itemizedlist>
</para>
<para>Logging records are created inside <ref refid="classCppLogging_1_1Logger" kindref="compound">Logger</ref> class and processed by logging appenders, filters and layouts.</para>
<para>Not thread-safe. </para>
    </detaileddescription>
    <location file="include/logging/record.h" line="40" column="1" bodyfile="include/logging/record.h" bodystart="39" bodyend="76"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1Record_1a9fbb553c4a7dde6690118c46a2b2d946" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>buffer</name></member>
      <member refid="classCppLogging_1_1Record_1a329f4aee55d7a67be3f313449b4bdf21" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>Clear</name></member>
      <member refid="classCppLogging_1_1Record_1ace1496b48e6ca8950e1a6ffb254f408a" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>Format</name></member>
      <member refid="classCppLogging_1_1Record_1a4f673dff61bc47ca855b489cdc8ac227" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>level</name></member>
      <member refid="classCppLogging_1_1Record_1a8791d7c6170eda83edc33e66a5d1a9eb" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>logger</name></member>
      <member refid="classCppLogging_1_1Record_1a5633a400f28f8b80878eb0979e128668" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>message</name></member>
      <member refid="classCppLogging_1_1Record_1a7bba3b9432bea704f7012a52cdb22d19" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1Record_1abdc1b63b47208d14755fc566b07e6ea1" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1Record_1a53fb6876e9bcb49289e0447ed79d6415" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>raw</name></member>
      <member refid="classCppLogging_1_1Record_1a9869b96b578bbb85709cdaec079526ee" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>Record</name></member>
      <member refid="classCppLogging_1_1Record_1aa27f6c8c7b1593d38ad4c28294df63c9" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>Record</name></member>
      <member refid="classCppLogging_1_1Record_1aafb916fa6c565ff7735e18d4e52e6f81" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>Record</name></member>
      <member refid="classCppLogging_1_1Record_1a05103353f6464abaed30526a45b6ad39" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>swap</name></member>
      <member refid="classCppLogging_1_1Record_1a41307f7cef7933943d41aa2f13fcef01" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>swap</name></member>
      <member refid="classCppLogging_1_1Record_1a816e732d29b4dcd29a7f073b40b20738" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>thread</name></member>
      <member refid="classCppLogging_1_1Record_1acb824eebe901b423004a65d73dd1ce4d" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>timestamp</name></member>
      <member refid="classCppLogging_1_1Record_1a80115bd6070e1d840724b35621047256" prot="public" virt="non-virtual"><scope>CppLogging::Record</scope><name>~Record</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
