<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1Trigger" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::Trigger</compoundname>
    <basecompoundref refid="classCppLogging_1_1Filter" prot="public" virt="non-virtual">CppLogging::Filter</basecompoundref>
    <includes refid="trigger_8h" local="no">trigger.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCppLogging_1_1Trigger_1ac7e7bc09791e2d49f22088adc0dbaf7c" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; CppLogging::Trigger::_state</definition>
        <argsstring></argsstring>
        <name>_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="54" column="1" bodyfile="include/logging/trigger.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1add5ecc4976764319b3194165d8b4fc58" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CppLogging::Trigger::Trigger</definition>
        <argsstring>(bool state=true)</argsstring>
        <name>Trigger</name>
        <param>
          <type>bool</type>
          <declname>state</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Initialize trigger with an initial logging state (enabled or disabled) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>- Initial logging state (default is true) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="31" column="1" bodyfile="include/logging/trigger.h" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a644ce7ddb13f11fb1e5521a4a4a90d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::Trigger::Trigger</definition>
        <argsstring>(const Trigger &amp;)=delete</argsstring>
        <name>Trigger</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1Trigger" kindref="compound">Trigger</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a2539e6a2cf040f16637291727cabd51f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::Trigger::Trigger</definition>
        <argsstring>(Trigger &amp;&amp;)=default</argsstring>
        <name>Trigger</name>
        <param>
          <type><ref refid="classCppLogging_1_1Trigger" kindref="compound">Trigger</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a7b997a10c01c8696cbf7f22e12be4826" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CppLogging::Trigger::~Trigger</definition>
        <argsstring>()=default</argsstring>
        <name>~Trigger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a91d39cf86fdea9fd43ea30461be4192f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1Trigger" kindref="compound">Trigger</ref> &amp;</type>
        <definition>Trigger&amp; CppLogging::Trigger::operator=</definition>
        <argsstring>(const Trigger &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1Trigger" kindref="compound">Trigger</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a3c6b77533da433ebbd8b139d3562b818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1Trigger" kindref="compound">Trigger</ref> &amp;</type>
        <definition>Trigger&amp; CppLogging::Trigger::operator=</definition>
        <argsstring>(Trigger &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1Trigger" kindref="compound">Trigger</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a3ec7ca4993b7ee110fccc5984caa7901" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CppLogging::Trigger::IsEnabled</definition>
        <argsstring>() noexcept</argsstring>
        <name>IsEnabled</name>
        <briefdescription>
<para>Is logging enabled? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="40" column="1" bodyfile="include/logging/trigger.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a2df9ab0b929772cd7b4b5a990102b1d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CppLogging::Trigger::Enable</definition>
        <argsstring>() noexcept</argsstring>
        <name>Enable</name>
        <briefdescription>
<para>Enable logging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="43" column="1" bodyfile="include/logging/trigger.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1afa07373f15ec3ecd7618d391059d4b07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CppLogging::Trigger::Disable</definition>
        <argsstring>() noexcept</argsstring>
        <name>Disable</name>
        <briefdescription>
<para>Disable logging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="45" column="1" bodyfile="include/logging/trigger.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1a476aab6d9df45cdf6edd531a8f522628" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CppLogging::Trigger::Toggle</definition>
        <argsstring>() noexcept</argsstring>
        <name>Toggle</name>
        <briefdescription>
<para>Toggle logging. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="47" column="1" bodyfile="include/logging/trigger.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1Trigger_1ae4c42b3297782c613133c18e73ec5f3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool CppLogging::Trigger::FilterRecord</definition>
        <argsstring>(Record &amp;record) override</argsstring>
        <name>FilterRecord</name>
        <reimplements refid="classCppLogging_1_1Filter_1af8e8cba41c936d1d3c10476091bd44b2">FilterRecord</reimplements>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para><ref refid="classCppLogging_1_1Filter" kindref="compound">Filter</ref> the given logging record. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>record</parametername>
</parameternamelist>
<parameterdescription>
<para>- Logging record </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&apos;true&apos; if the logging record should be processed, &apos;false&apos; if the logging record was filtered out </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/trigger.h" line="50" column="1" bodyfile="include/logging/trigger.h" bodystart="50" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Logging trigger. </para>
    </briefdescription>
    <detaileddescription>
<para>Logging trigger is a special filter that allows to enable or disable logging.</para>
<para>Thread-safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="105">
        <label>CppLogging::Trigger</label>
        <link refid="classCppLogging_1_1Trigger"/>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>CppLogging::Filter</label>
        <link refid="classCppLogging_1_1Filter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="107">
        <label>CppLogging::Trigger</label>
        <link refid="classCppLogging_1_1Trigger"/>
        <childnode refid="108" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>CppLogging::Filter</label>
        <link refid="classCppLogging_1_1Filter"/>
      </node>
    </collaborationgraph>
    <location file="include/logging/trigger.h" line="25" column="1" bodyfile="include/logging/trigger.h" bodystart="24" bodyend="55"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1Trigger_1ac7e7bc09791e2d49f22088adc0dbaf7c" prot="private" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>_state</name></member>
      <member refid="classCppLogging_1_1Trigger_1afa07373f15ec3ecd7618d391059d4b07" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>Disable</name></member>
      <member refid="classCppLogging_1_1Trigger_1a2df9ab0b929772cd7b4b5a990102b1d5" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>Enable</name></member>
      <member refid="classCppLogging_1_1Trigger_1ae4c42b3297782c613133c18e73ec5f3d" prot="public" virt="virtual"><scope>CppLogging::Trigger</scope><name>FilterRecord</name></member>
      <member refid="classCppLogging_1_1Trigger_1a3ec7ca4993b7ee110fccc5984caa7901" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>IsEnabled</name></member>
      <member refid="classCppLogging_1_1Trigger_1a91d39cf86fdea9fd43ea30461be4192f" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1Trigger_1a3c6b77533da433ebbd8b139d3562b818" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1Trigger_1a476aab6d9df45cdf6edd531a8f522628" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>Toggle</name></member>
      <member refid="classCppLogging_1_1Trigger_1add5ecc4976764319b3194165d8b4fc58" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>Trigger</name></member>
      <member refid="classCppLogging_1_1Trigger_1a644ce7ddb13f11fb1e5521a4a4a90d8a" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>Trigger</name></member>
      <member refid="classCppLogging_1_1Trigger_1a2539e6a2cf040f16637291727cabd51f" prot="public" virt="non-virtual"><scope>CppLogging::Trigger</scope><name>Trigger</name></member>
      <member refid="classCppLogging_1_1Trigger_1a7b997a10c01c8696cbf7f22e12be4826" prot="public" virt="virtual"><scope>CppLogging::Trigger</scope><name>~Trigger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
