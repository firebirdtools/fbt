<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1SyslogAppender" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::SyslogAppender</compoundname>
    <basecompoundref refid="classCppLogging_1_1Appender" prot="public" virt="non-virtual">CppLogging::Appender</basecompoundref>
    <includes refid="syslog__appender_8h" local="no">syslog_appender.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1SyslogAppender_1acbe088ad90296c1fc16e51273782dd87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::SyslogAppender::SyslogAppender</definition>
        <argsstring>()</argsstring>
        <name>SyslogAppender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/syslog_appender.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyslogAppender_1a2d57bf4dee6a385731aa3528f3832b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::SyslogAppender::SyslogAppender</definition>
        <argsstring>(const SyslogAppender &amp;)=delete</argsstring>
        <name>SyslogAppender</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1SyslogAppender" kindref="compound">SyslogAppender</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/syslog_appender.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyslogAppender_1a2d7e14718e90959fc52674fefd6ff785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::SyslogAppender::SyslogAppender</definition>
        <argsstring>(SyslogAppender &amp;&amp;) noexcept=default</argsstring>
        <name>SyslogAppender</name>
        <param>
          <type><ref refid="classCppLogging_1_1SyslogAppender" kindref="compound">SyslogAppender</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/syslog_appender.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyslogAppender_1ab6a0dac1d512692c3d9af58e9b3db05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CppLogging::SyslogAppender::~SyslogAppender</definition>
        <argsstring>()</argsstring>
        <name>~SyslogAppender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/syslog_appender.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyslogAppender_1a23fb790c6791d7de54fcfc57b9d6c568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1SyslogAppender" kindref="compound">SyslogAppender</ref> &amp;</type>
        <definition>SyslogAppender&amp; CppLogging::SyslogAppender::operator=</definition>
        <argsstring>(const SyslogAppender &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1SyslogAppender" kindref="compound">SyslogAppender</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/syslog_appender.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyslogAppender_1a3a64f7bfcc7fa4c73afcc05a36ee29a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1SyslogAppender" kindref="compound">SyslogAppender</ref> &amp;</type>
        <definition>SyslogAppender&amp; CppLogging::SyslogAppender::operator=</definition>
        <argsstring>(SyslogAppender &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1SyslogAppender" kindref="compound">SyslogAppender</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/syslog_appender.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1SyslogAppender_1a3c5cd33276c4ce242346c1435ef3e744" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CppLogging::SyslogAppender::AppendRecord</definition>
        <argsstring>(Record &amp;record) override</argsstring>
        <name>AppendRecord</name>
        <reimplements refid="classCppLogging_1_1Appender_1a770dfe9cd6d1f22a66582bed758a7b4e">AppendRecord</reimplements>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para>Append the given logging record. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>record</parametername>
</parameternamelist>
<parameterdescription>
<para>- Logging record </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/syslog_appender.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Syslog appender. </para>
    </briefdescription>
    <detaileddescription>
<para>Syslog appender forward logging record to the syslog() system call for Unix systems. Under Windows systems this appender does nothing!</para>
<para>Thread-safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="97">
        <label>CppLogging::SyslogAppender</label>
        <link refid="classCppLogging_1_1SyslogAppender"/>
        <childnode refid="98" relation="public-inheritance">
        </childnode>
      </node>
      <node id="98">
        <label>CppLogging::Appender</label>
        <link refid="classCppLogging_1_1Appender"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="99">
        <label>CppLogging::SyslogAppender</label>
        <link refid="classCppLogging_1_1SyslogAppender"/>
        <childnode refid="100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>CppLogging::Appender</label>
        <link refid="classCppLogging_1_1Appender"/>
      </node>
    </collaborationgraph>
    <location file="include/logging/appenders/syslog_appender.h" line="24" column="1" bodyfile="include/logging/appenders/syslog_appender.h" bodystart="23" bodyend="36"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1SyslogAppender_1a3c5cd33276c4ce242346c1435ef3e744" prot="public" virt="virtual"><scope>CppLogging::SyslogAppender</scope><name>AppendRecord</name></member>
      <member refid="classCppLogging_1_1Appender_1a6f6ebd942c5045e8b07d100fe5656ee6" prot="public" virt="virtual"><scope>CppLogging::SyslogAppender</scope><name>Flush</name></member>
      <member refid="classCppLogging_1_1SyslogAppender_1a23fb790c6791d7de54fcfc57b9d6c568" prot="public" virt="non-virtual"><scope>CppLogging::SyslogAppender</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1SyslogAppender_1a3a64f7bfcc7fa4c73afcc05a36ee29a9" prot="public" virt="non-virtual"><scope>CppLogging::SyslogAppender</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1SyslogAppender_1acbe088ad90296c1fc16e51273782dd87" prot="public" virt="non-virtual"><scope>CppLogging::SyslogAppender</scope><name>SyslogAppender</name></member>
      <member refid="classCppLogging_1_1SyslogAppender_1a2d57bf4dee6a385731aa3528f3832b96" prot="public" virt="non-virtual"><scope>CppLogging::SyslogAppender</scope><name>SyslogAppender</name></member>
      <member refid="classCppLogging_1_1SyslogAppender_1a2d7e14718e90959fc52674fefd6ff785" prot="public" virt="non-virtual"><scope>CppLogging::SyslogAppender</scope><name>SyslogAppender</name></member>
      <member refid="classCppLogging_1_1SyslogAppender_1ab6a0dac1d512692c3d9af58e9b3db05c" prot="public" virt="virtual"><scope>CppLogging::SyslogAppender</scope><name>~SyslogAppender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
