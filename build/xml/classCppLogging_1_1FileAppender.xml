<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1FileAppender" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::FileAppender</compoundname>
    <basecompoundref refid="classCppLogging_1_1Appender" prot="public" virt="non-virtual">CppLogging::Appender</basecompoundref>
    <includes refid="file__appender_8h" local="no">file_appender.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCppLogging_1_1FileAppender_1a67d43811363221e29ab69d68650f4a48" prot="private" static="no" mutable="no">
        <type>CppCommon::Timestamp</type>
        <definition>CppCommon::Timestamp CppLogging::FileAppender::_retry</definition>
        <argsstring></argsstring>
        <name>_retry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="49" column="1" bodyfile="include/logging/appenders/file_appender.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1FileAppender_1ab11b168d79e4c8834582e20b486b5ac7" prot="private" static="no" mutable="no">
        <type>CppCommon::File</type>
        <definition>CppCommon::File CppLogging::FileAppender::_file</definition>
        <argsstring></argsstring>
        <name>_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="50" column="1" bodyfile="include/logging/appenders/file_appender.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1FileAppender_1ad1a71fc11183a5b6803b7fe055d080fc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CppLogging::FileAppender::_truncate</definition>
        <argsstring></argsstring>
        <name>_truncate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="51" column="1" bodyfile="include/logging/appenders/file_appender.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCppLogging_1_1FileAppender_1a1e9f2078f75fe2694146843d8834a1b6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CppLogging::FileAppender::_auto_flush</definition>
        <argsstring></argsstring>
        <name>_auto_flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="52" column="1" bodyfile="include/logging/appenders/file_appender.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1a7498432fca4042ed8f074b48b63d43b4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::FileAppender::FileAppender</definition>
        <argsstring>(const CppCommon::File &amp;file, bool truncate=false, bool auto_flush=false)</argsstring>
        <name>FileAppender</name>
        <param>
          <type>const CppCommon::File &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>truncate</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>auto_flush</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Initialize the appender with a given file, truncate/append and auto-flush flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>- File </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>truncate</parametername>
</parameternamelist>
<parameterdescription>
<para>- Truncate flag (default is false) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auto_flush</parametername>
</parameternamelist>
<parameterdescription>
<para>- Auto-flush flag (default is false) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1ac690117d5b6484e9f6e90f0a845f33fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::FileAppender::FileAppender</definition>
        <argsstring>(const FileAppender &amp;)=delete</argsstring>
        <name>FileAppender</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1FileAppender" kindref="compound">FileAppender</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1a3b7af4b577ae6a4c9520f7615887041d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::FileAppender::FileAppender</definition>
        <argsstring>(FileAppender &amp;&amp;)=default</argsstring>
        <name>FileAppender</name>
        <param>
          <type><ref refid="classCppLogging_1_1FileAppender" kindref="compound">FileAppender</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1a0423c19731d415789dda030a749f4035" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CppLogging::FileAppender::~FileAppender</definition>
        <argsstring>()=default</argsstring>
        <name>~FileAppender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1a74faae21ffcb437c9a6279258915594a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1FileAppender" kindref="compound">FileAppender</ref> &amp;</type>
        <definition>FileAppender&amp; CppLogging::FileAppender::operator=</definition>
        <argsstring>(const FileAppender &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1FileAppender" kindref="compound">FileAppender</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1a4de4304f9f88fe3b4686e608e306ebe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1FileAppender" kindref="compound">FileAppender</ref> &amp;</type>
        <definition>FileAppender&amp; CppLogging::FileAppender::operator=</definition>
        <argsstring>(FileAppender &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1FileAppender" kindref="compound">FileAppender</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1acb3fe3e3440c8e15f0016c83ed7f4e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CppLogging::FileAppender::AppendRecord</definition>
        <argsstring>(Record &amp;record) override</argsstring>
        <name>AppendRecord</name>
        <reimplements refid="classCppLogging_1_1Appender_1a770dfe9cd6d1f22a66582bed758a7b4e">AppendRecord</reimplements>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para>Append the given logging record. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>record</parametername>
</parameternamelist>
<parameterdescription>
<para>- Logging record </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1acedc510219d9faaf3e0f64e9134027f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CppLogging::FileAppender::Flush</definition>
        <argsstring>() override</argsstring>
        <name>Flush</name>
        <reimplements refid="classCppLogging_1_1Appender_1a6f6ebd942c5045e8b07d100fe5656ee6">Flush</reimplements>
        <briefdescription>
<para>Flush the logging appender. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCppLogging_1_1FileAppender_1a41fe2ea0c1247f9cf4cecd73bbd5ca50" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CppLogging::FileAppender::PrepareFile</definition>
        <argsstring>()</argsstring>
        <name>PrepareFile</name>
        <briefdescription>
<para>Prepare the file for writing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/appenders/file_appender.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>File appender. </para>
    </briefdescription>
    <detaileddescription>
<para>File appender writes the given logging record into the file with the given file name. In case of any IO error this appender will lost the logging record, but try to recover from fail in a short interval of 100ms.</para>
<para>Not thread-safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="39">
        <label>CppLogging::FileAppender</label>
        <link refid="classCppLogging_1_1FileAppender"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>CppLogging::Appender</label>
        <link refid="classCppLogging_1_1Appender"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="41">
        <label>CppLogging::FileAppender</label>
        <link refid="classCppLogging_1_1FileAppender"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>CppLogging::Appender</label>
        <link refid="classCppLogging_1_1Appender"/>
      </node>
    </collaborationgraph>
    <location file="include/logging/appenders/file_appender.h" line="28" column="1" bodyfile="include/logging/appenders/file_appender.h" bodystart="27" bodyend="61"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1FileAppender_1a1e9f2078f75fe2694146843d8834a1b6" prot="private" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>_auto_flush</name></member>
      <member refid="classCppLogging_1_1FileAppender_1ab11b168d79e4c8834582e20b486b5ac7" prot="private" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>_file</name></member>
      <member refid="classCppLogging_1_1FileAppender_1a67d43811363221e29ab69d68650f4a48" prot="private" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>_retry</name></member>
      <member refid="classCppLogging_1_1FileAppender_1ad1a71fc11183a5b6803b7fe055d080fc" prot="private" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>_truncate</name></member>
      <member refid="classCppLogging_1_1FileAppender_1acb3fe3e3440c8e15f0016c83ed7f4e05" prot="public" virt="virtual"><scope>CppLogging::FileAppender</scope><name>AppendRecord</name></member>
      <member refid="classCppLogging_1_1FileAppender_1a7498432fca4042ed8f074b48b63d43b4" prot="public" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>FileAppender</name></member>
      <member refid="classCppLogging_1_1FileAppender_1ac690117d5b6484e9f6e90f0a845f33fa" prot="public" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>FileAppender</name></member>
      <member refid="classCppLogging_1_1FileAppender_1a3b7af4b577ae6a4c9520f7615887041d" prot="public" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>FileAppender</name></member>
      <member refid="classCppLogging_1_1FileAppender_1acedc510219d9faaf3e0f64e9134027f4" prot="public" virt="virtual"><scope>CppLogging::FileAppender</scope><name>Flush</name></member>
      <member refid="classCppLogging_1_1FileAppender_1a74faae21ffcb437c9a6279258915594a" prot="public" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1FileAppender_1a4de4304f9f88fe3b4686e608e306ebe6" prot="public" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1FileAppender_1a41fe2ea0c1247f9cf4cecd73bbd5ca50" prot="private" virt="non-virtual"><scope>CppLogging::FileAppender</scope><name>PrepareFile</name></member>
      <member refid="classCppLogging_1_1FileAppender_1a0423c19731d415789dda030a749f4035" prot="public" virt="virtual"><scope>CppLogging::FileAppender</scope><name>~FileAppender</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
