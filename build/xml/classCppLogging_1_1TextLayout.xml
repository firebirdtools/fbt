<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1TextLayout" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::TextLayout</compoundname>
    <basecompoundref refid="classCppLogging_1_1Layout" prot="public" virt="non-virtual">CppLogging::Layout</basecompoundref>
    <includes refid="text__layout_8h" local="no">text_layout.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCppLogging_1_1TextLayout_1a2b2180ad3de632b89a9dc7ba4d1e3e55" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; CppLogging::TextLayout::_pimpl</definition>
        <argsstring></argsstring>
        <name>_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="70" column="1" bodyfile="include/logging/layouts/text_layout.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1ae2a4ca241c2cc54df25a30287255ef22" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::TextLayout::TextLayout</definition>
        <argsstring>(const std::string &amp;pattern=&quot;{UtcDateTime} [{Thread}] {Level} {Logger} - {Message}{EndLine}&quot;)</argsstring>
        <name>TextLayout</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>pattern</declname>
          <defval>&quot;{UtcDateTime} [{Thread}] {<ref refid="namespaceCppLogging_1ac4e889a814b82af010ef93be2e618f3b" kindref="member">Level</ref>} {<ref refid="classCppLogging_1_1Logger" kindref="compound">Logger</ref>} - {Message}{EndLine}&quot;</defval>
        </param>
        <briefdescription>
<para>Initialize text logging layout with a given pattern. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>- <ref refid="classCppLogging_1_1Layout" kindref="compound">Layout</ref> pattern </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1a681fb4962a1d348b345aca1addf3f305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::TextLayout::TextLayout</definition>
        <argsstring>(const TextLayout &amp;)=delete</argsstring>
        <name>TextLayout</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1TextLayout" kindref="compound">TextLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1a862320acb8babeac72da86278dc9b2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::TextLayout::TextLayout</definition>
        <argsstring>(TextLayout &amp;&amp;layout) noexcept</argsstring>
        <name>TextLayout</name>
        <param>
          <type><ref refid="classCppLogging_1_1TextLayout" kindref="compound">TextLayout</ref> &amp;&amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1a2cd0088051b208cd91fb7145699155d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CppLogging::TextLayout::~TextLayout</definition>
        <argsstring>()</argsstring>
        <name>~TextLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1a895012b602eb084c1a40a14e519f6d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1TextLayout" kindref="compound">TextLayout</ref> &amp;</type>
        <definition>TextLayout&amp; CppLogging::TextLayout::operator=</definition>
        <argsstring>(const TextLayout &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1TextLayout" kindref="compound">TextLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1a6cde1b0134de391946d51c08302f6ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1TextLayout" kindref="compound">TextLayout</ref> &amp;</type>
        <definition>TextLayout&amp; CppLogging::TextLayout::operator=</definition>
        <argsstring>(TextLayout &amp;&amp;layout) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1TextLayout" kindref="compound">TextLayout</ref> &amp;&amp;</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1a85d7fe6404639bcfb8189fd4965127db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; CppLogging::TextLayout::pattern</definition>
        <argsstring>() const noexcept</argsstring>
        <name>pattern</name>
        <briefdescription>
<para>Get the text layout pattern. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1TextLayout_1a9d655aa4844d48fe4170fa21d5dcfd23" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CppLogging::TextLayout::LayoutRecord</definition>
        <argsstring>(Record &amp;record) override</argsstring>
        <name>LayoutRecord</name>
        <reimplements refid="classCppLogging_1_1Layout_1a2afe7ead82e265c5a83777911d3c9a49">LayoutRecord</reimplements>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para><ref refid="classCppLogging_1_1Layout" kindref="compound">Layout</ref> the given logging record into a raw buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This method will update the raw filed of the given logging record.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>record</parametername>
</parameternamelist>
<parameterdescription>
<para>- Logging record </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/text_layout.h" line="66" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Text layout. </para>
    </briefdescription>
    <detaileddescription>
<para>Text layout converts the given logging record into the text string using a given pattern. Text layout pattern is a string with a special placeholders provided inside curly brackets (&quot;{}&quot;).</para>
<para>Supported placeholders:<itemizedlist>
<listitem><para>{UtcDateTime} / {LocalDateTime} - converted to the UTC/local date &amp; time (e.g. &quot;1997-07-16T19:20:30.123Z&quot; / &quot;1997-07-16T19:20:30.123+01:00&quot;)</para>
</listitem><listitem><para>{UtcDate} / {LocalDate} - converted to the UTC/local date (e.g. &quot;1997-07-16&quot;)</para>
</listitem><listitem><para>{Time} / {LocalTime} - converted to the UTC/local time (e.g. &quot;19:20:30.123Z&quot; / &quot;19:20:30.123+01:00&quot;)</para>
</listitem><listitem><para>{UtcYear} / {LocalYear} - converted to the UTC/local four-digits year (e.g. &quot;1997&quot;)</para>
</listitem><listitem><para>{UtcMonth} / {LocalMonth} - converted to the UTC/local two-digits month (e.g. &quot;07&quot;)</para>
</listitem><listitem><para>{UtcDay} / {LocalDay} - converted to the UTC/local two-digits day (e.g. &quot;16&quot;)</para>
</listitem><listitem><para>{UtcHour} / {LocalHour} - converted to the UTC/local two-digits hour (e.g. &quot;19&quot;)</para>
</listitem><listitem><para>{UtcMinute} / {LocalMinute} - converted to the UTC/local two-digits minute (e.g. &quot;20&quot;)</para>
</listitem><listitem><para>{UtcSecond} / {LocalSecond} - converted to the UTC/local two-digits second (e.g. &quot;30&quot;)</para>
</listitem><listitem><para>{UtcTimezone} / {LocalTimezone} - converted to the UTC/local timezone suffix (e.g. &quot;Z&quot; / &quot;+01:00&quot;)</para>
</listitem><listitem><para>{Millisecond} - converted to the three-digits millisecond (e.g. &quot;123&quot;)</para>
</listitem><listitem><para>{Microsecond} - converted to the three-digits microsecond (e.g. &quot;123&quot;)</para>
</listitem><listitem><para>{Nanosecond} - converted to the three-digits nanosecond (e.g. &quot;789&quot;)</para>
</listitem><listitem><para>{Thread} - converted to the thread Id (e.g. &quot;0x0028F3D8&quot;)</para>
</listitem><listitem><para>{Level} - converted to the logging level</para>
</listitem><listitem><para>{<ref refid="classCppLogging_1_1Logger" kindref="compound">Logger</ref>} - converted to the logger name</para>
</listitem><listitem><para>{Message} - converted to the log message</para>
</listitem><listitem><para>{EndLine} - converted to the end line suffix (e.g. Unix &quot;\n&quot; or Windows &quot;\r\n&quot;)</para>
</listitem></itemizedlist>
</para>
<para>Thread-safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="102">
        <label>CppLogging::Layout</label>
        <link refid="classCppLogging_1_1Layout"/>
      </node>
      <node id="101">
        <label>CppLogging::TextLayout</label>
        <link refid="classCppLogging_1_1TextLayout"/>
        <childnode refid="102" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="104">
        <label>CppLogging::Layout</label>
        <link refid="classCppLogging_1_1Layout"/>
      </node>
      <node id="103">
        <label>CppLogging::TextLayout</label>
        <link refid="classCppLogging_1_1TextLayout"/>
        <childnode refid="104" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/logging/layouts/text_layout.h" line="48" column="1" bodyfile="include/logging/layouts/text_layout.h" bodystart="47" bodyend="71"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1TextLayout_1a2b2180ad3de632b89a9dc7ba4d1e3e55" prot="private" virt="non-virtual"><scope>CppLogging::TextLayout</scope><name>_pimpl</name></member>
      <member refid="classCppLogging_1_1TextLayout_1a9d655aa4844d48fe4170fa21d5dcfd23" prot="public" virt="virtual"><scope>CppLogging::TextLayout</scope><name>LayoutRecord</name></member>
      <member refid="classCppLogging_1_1TextLayout_1a895012b602eb084c1a40a14e519f6d2d" prot="public" virt="non-virtual"><scope>CppLogging::TextLayout</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1TextLayout_1a6cde1b0134de391946d51c08302f6ce1" prot="public" virt="non-virtual"><scope>CppLogging::TextLayout</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1TextLayout_1a85d7fe6404639bcfb8189fd4965127db" prot="public" virt="non-virtual"><scope>CppLogging::TextLayout</scope><name>pattern</name></member>
      <member refid="classCppLogging_1_1TextLayout_1ae2a4ca241c2cc54df25a30287255ef22" prot="public" virt="non-virtual"><scope>CppLogging::TextLayout</scope><name>TextLayout</name></member>
      <member refid="classCppLogging_1_1TextLayout_1a681fb4962a1d348b345aca1addf3f305" prot="public" virt="non-virtual"><scope>CppLogging::TextLayout</scope><name>TextLayout</name></member>
      <member refid="classCppLogging_1_1TextLayout_1a862320acb8babeac72da86278dc9b2ac" prot="public" virt="non-virtual"><scope>CppLogging::TextLayout</scope><name>TextLayout</name></member>
      <member refid="classCppLogging_1_1TextLayout_1a2cd0088051b208cd91fb7145699155d0" prot="public" virt="virtual"><scope>CppLogging::TextLayout</scope><name>~TextLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
