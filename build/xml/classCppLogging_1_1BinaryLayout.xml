<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classCppLogging_1_1BinaryLayout" kind="class" language="C++" prot="public">
    <compoundname>CppLogging::BinaryLayout</compoundname>
    <basecompoundref refid="classCppLogging_1_1Layout" prot="public" virt="non-virtual">CppLogging::Layout</basecompoundref>
    <includes refid="binary__layout_8h" local="no">binary_layout.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCppLogging_1_1BinaryLayout_1a6da4ba2947cbf78b50cb3a4470af6f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::BinaryLayout::BinaryLayout</definition>
        <argsstring>()=default</argsstring>
        <name>BinaryLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/binary_layout.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1BinaryLayout_1af153082dce344cf80e3e311acbaea0f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::BinaryLayout::BinaryLayout</definition>
        <argsstring>(const BinaryLayout &amp;)=delete</argsstring>
        <name>BinaryLayout</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1BinaryLayout" kindref="compound">BinaryLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/binary_layout.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1BinaryLayout_1aa91301aebbbb501cbaea3923f2a16c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CppLogging::BinaryLayout::BinaryLayout</definition>
        <argsstring>(BinaryLayout &amp;&amp;) noexcept=default</argsstring>
        <name>BinaryLayout</name>
        <param>
          <type><ref refid="classCppLogging_1_1BinaryLayout" kindref="compound">BinaryLayout</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/binary_layout.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1BinaryLayout_1aeaec266fb019fa9ca511112eb04cd62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual CppLogging::BinaryLayout::~BinaryLayout</definition>
        <argsstring>()=default</argsstring>
        <name>~BinaryLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/binary_layout.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1BinaryLayout_1a7d08dbb3020aec2d4b8797c4116d76d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1BinaryLayout" kindref="compound">BinaryLayout</ref> &amp;</type>
        <definition>BinaryLayout&amp; CppLogging::BinaryLayout::operator=</definition>
        <argsstring>(const BinaryLayout &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCppLogging_1_1BinaryLayout" kindref="compound">BinaryLayout</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/binary_layout.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1BinaryLayout_1ae835b7a5db03e483ce46374ac4352f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCppLogging_1_1BinaryLayout" kindref="compound">BinaryLayout</ref> &amp;</type>
        <definition>BinaryLayout&amp; CppLogging::BinaryLayout::operator=</definition>
        <argsstring>(BinaryLayout &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classCppLogging_1_1BinaryLayout" kindref="compound">BinaryLayout</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/binary_layout.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCppLogging_1_1BinaryLayout_1a1ab08fc44268c0e285d7e614fd77dd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CppLogging::BinaryLayout::LayoutRecord</definition>
        <argsstring>(Record &amp;record) override</argsstring>
        <name>LayoutRecord</name>
        <reimplements refid="classCppLogging_1_1Layout_1a2afe7ead82e265c5a83777911d3c9a49">LayoutRecord</reimplements>
        <param>
          <type><ref refid="classCppLogging_1_1Record" kindref="compound">Record</ref> &amp;</type>
          <declname>record</declname>
        </param>
        <briefdescription>
<para><ref refid="classCppLogging_1_1Layout" kindref="compound">Layout</ref> the given logging record into a raw buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This method will update the raw filed of the given logging record.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>record</parametername>
</parameternamelist>
<parameterdescription>
<para>- Logging record </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/logging/layouts/binary_layout.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Binary layout. </para>
    </briefdescription>
    <detaileddescription>
<para>Binary layout performs simple memory copy operation to convert the given logging record into the plane raw buffer.</para>
<para>Thread-safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="17">
        <label>CppLogging::BinaryLayout</label>
        <link refid="classCppLogging_1_1BinaryLayout"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>CppLogging::Layout</label>
        <link refid="classCppLogging_1_1Layout"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="19">
        <label>CppLogging::BinaryLayout</label>
        <link refid="classCppLogging_1_1BinaryLayout"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>CppLogging::Layout</label>
        <link refid="classCppLogging_1_1Layout"/>
      </node>
    </collaborationgraph>
    <location file="include/logging/layouts/binary_layout.h" line="24" column="1" bodyfile="include/logging/layouts/binary_layout.h" bodystart="23" bodyend="36"/>
    <listofallmembers>
      <member refid="classCppLogging_1_1BinaryLayout_1a6da4ba2947cbf78b50cb3a4470af6f90" prot="public" virt="non-virtual"><scope>CppLogging::BinaryLayout</scope><name>BinaryLayout</name></member>
      <member refid="classCppLogging_1_1BinaryLayout_1af153082dce344cf80e3e311acbaea0f9" prot="public" virt="non-virtual"><scope>CppLogging::BinaryLayout</scope><name>BinaryLayout</name></member>
      <member refid="classCppLogging_1_1BinaryLayout_1aa91301aebbbb501cbaea3923f2a16c69" prot="public" virt="non-virtual"><scope>CppLogging::BinaryLayout</scope><name>BinaryLayout</name></member>
      <member refid="classCppLogging_1_1BinaryLayout_1a1ab08fc44268c0e285d7e614fd77dd7c" prot="public" virt="virtual"><scope>CppLogging::BinaryLayout</scope><name>LayoutRecord</name></member>
      <member refid="classCppLogging_1_1BinaryLayout_1a7d08dbb3020aec2d4b8797c4116d76d3" prot="public" virt="non-virtual"><scope>CppLogging::BinaryLayout</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1BinaryLayout_1ae835b7a5db03e483ce46374ac4352f6a" prot="public" virt="non-virtual"><scope>CppLogging::BinaryLayout</scope><name>operator=</name></member>
      <member refid="classCppLogging_1_1BinaryLayout_1aeaec266fb019fa9ca511112eb04cd62b" prot="public" virt="virtual"><scope>CppLogging::BinaryLayout</scope><name>~BinaryLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
